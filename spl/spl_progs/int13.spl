//Semget and semrelease sys call
alias processTable R9;
processTable = PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16;

// Save user stack in process table
[processTable + 13] = SP;

// Set kernal stack to user area of process table
SP = PAGE_SIZE * [processTable + 11] - 1;

alias userSP R0;
userSP = [processTable + 13];

alias retAdr R1;
retAdr = [PTBR + 2 * (userSP - 1) / PAGE_SIZE] * PAGE_SIZE + (userSP - 1) % PAGE_SIZE;

alias sysno R2;
sysno = [[PTBR + 2 * (userSP - 5) / PAGE_SIZE] * PAGE_SIZE + (userSP - 5) % PAGE_SIZE];

// Set mode flag to system call no
[processTable + 9] = sysno;

if (sysno == INT_SEMGET) then
    alias entry_idx R3;
    alias resTable R4;
    resTable = [processTable + 11] * PAGE_SIZE + RESOURCE_TABLE_OFFSET;
    entry_idx = 0;
    while (entry_idx < 8) do
        if ([resTable + 2 * entry_idx] == -1) then
            break;
        endif;
        entry_idx = entry_idx + 1;
    endwhile;

    if (entry_idx == 8) then
        [retAdr] = -1;
        goto exit;
    endif;

    [resTable + 2 * entry_idx] = SEMAPHORE;

    alias sem_idx R5;
    multipush(R9, R0, R1, R2, R3, R4);
    R1 = ACQUIRE_SEMAPHORE;
    R2 = [SYSTEM_STATUS_TABLE + 1];
    call RESOURCE_MANAGER;
    sem_idx = R0;
    multipop(R9, R0, R1, R2, R3, R4);

    if (sem_idx == -1) then
        [retAdr] = -2;
        goto exit;            
    endif;

    [resTable + 2 * entry_idx + 1] = sem_idx;
    [retAdr] = entry_idx;
endif;

if (sysno == INT_SEMRELEASE) then
    alias sem_id R3; // Resource table entry idx
    sem_id =  [[PTBR + 2 * (userSP - 4) / PAGE_SIZE] * PAGE_SIZE + (userSP - 4) % PAGE_SIZE];
    alias resTable R4;
    resTable = [processTable + 11] * PAGE_SIZE + RESOURCE_TABLE_OFFSET;

    if (sem_id < 0 || sem_id > 7 || [resTable + 2 * sem_id] != SEMAPHORE) then
        [retAdr] = -1;
        goto exit;
    endif;

    multipush(R9, R0, R1, R2, R3, R4);
    R3 = [resTable + 2 * sem_id + 1];
    R2 = [SYSTEM_STATUS_TABLE + 1];
    R1 = RELEASE_SEMAPHORE;
    call RESOURCE_MANAGER;
    multipop(R9, R0, R1, R2, R3, R4);

    [resTable + 2 * sem_id] = -1;
    [retAdr] = 0;
endif;

exit:
[processTable + 9] = 0;
SP = userSP;
ireturn; 